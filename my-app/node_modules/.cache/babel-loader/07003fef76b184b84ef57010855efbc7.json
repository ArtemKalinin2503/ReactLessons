{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\123\\\\Desktop\\\\ReactLessons\\\\my-app\\\\src\\\\App.js\";\nimport React, { Component } from 'react';\nimport './App.css';\nimport News from \"./components/News/News\";\n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      pageTitle: 'Title page of React',\n      news: [{\n        title: 'News 1',\n        description: 'Description news 1'\n      }, {\n        title: 'News 2',\n        description: 'Description news 2'\n      }]\n    };\n\n    this.handlerChangeTitle = () => {\n      //Изменение state\n      this.setState({\n        pageTitle: 'Change Page Title React'\n      });\n    };\n\n    this.handleInput = event => {\n      //Метод изменение state\n      this.setState({\n        pageTitle: event.target.value\n      });\n    };\n\n    this.handleChangeTitleNews = (value, index) => {\n      let newsArr = [...this.state.news]; //Копируем массив из state news (потому что нельзя напрямую изменять state)\n\n      newsArr[index].title = value; //У копии массива изменениям поле title (index - нужен чтобы детектить какую новость изменять)\n\n      this.setState({\n        //И в конце перезапишем state news на новый измененный массив\n        news: newsArr\n      });\n    };\n\n    this.handleDeleteNews = index => {\n      let newsArr = [...this.state.news]; //Копируем массив state news (так как нельзя изменять state еа прямую)\n\n      newsArr.splice(index, 1); //Удаляем новость с помощью метода splice (принимает два параметра - первый это Index элемента который удаляем и вторым количество элементов)\n\n      this.setState({\n        //Перезапишем state news в новый массив\n        news: newsArr\n      });\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"App\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      style: {\n        fontSize: 20\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 21\n      }\n    }, \"HELLO\"), /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 21\n      }\n    }, this.state.pageTitle), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      onChange: this.handleInput,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(\"button\", {\n      onClick: this.handlerChangeTitle,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 21\n      }\n    }, \"Change title Page\"), \" \", this.state.news.map((itemNews, index) => {\n      return /*#__PURE__*/React.createElement(News, {\n        key: index,\n        title: itemNews.title,\n        descriptions: itemNews.description,\n        changeTitleNews: event => this.handleChangeTitleNews(event.target.value, index) //Передаем метод в качестве props (так как input находиться в компненте News)\n        ,\n        onDelete: this.handleDeleteNews.bind(this, index),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 29\n        }\n      });\n    })));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["C:/Users/123/Desktop/ReactLessons/my-app/src/App.js"],"names":["React","Component","News","App","state","pageTitle","news","title","description","handlerChangeTitle","setState","handleInput","event","target","value","handleChangeTitleNews","index","newsArr","handleDeleteNews","splice","render","fontSize","map","itemNews","bind"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport './App.css';\nimport News from \"./components/News/News\";\n\nclass App extends Component {\n\n    //State\n        state = {\n            pageTitle: 'Title page of React',\n            news: [\n                {\n                    title: 'News 1',\n                    description: 'Description news 1'\n                },\n                {\n                    title: 'News 2',\n                    description: 'Description news 2'\n                }\n            ],\n        }\n\n    //Methods\n        //Измененеие заголовка страницы\n        handlerChangeTitle = () => {\n            //Изменение state\n            this.setState({\n                pageTitle: 'Change Page Title React'\n            });\n        };\n\n        //Поле изменение заголовка страницы из input\n        handleInput = (event) => {\n            //Метод изменение state\n            this.setState({\n                pageTitle: event.target.value\n            })\n        };\n\n        //Изменение заголовка новости\n        handleChangeTitleNews = (value, index) => {\n            let newsArr = [...this.state.news]; //Копируем массив из state news (потому что нельзя напрямую изменять state)\n            newsArr[index].title = value; //У копии массива изменениям поле title (index - нужен чтобы детектить какую новость изменять)\n            this.setState({ //И в конце перезапишем state news на новый измененный массив\n                news: newsArr\n            })\n        };\n\n        //Удаление новости\n        handleDeleteNews = (index) => {\n            let newsArr = [...this.state.news]; //Копируем массив state news (так как нельзя изменять state еа прямую)\n            newsArr.splice(index, 1); //Удаляем новость с помощью метода splice (принимает два параметра - первый это Index элемента который удаляем и вторым количество элементов)\n            this.setState({ //Перезапишем state news в новый массив\n                news: newsArr\n            })\n        };\n\n    render() {\n        return (\n            <div className=\"App\">\n                <div>\n                    <p style={{fontSize: 20}}>HELLO</p>\n                    <h1>{this.state.pageTitle}</h1>\n                    <input type='text' onChange={this.handleInput}/>\n                    <button onClick={this.handlerChangeTitle}>Change title Page</button> {/*Вещаем обработчик событий*/}\n                    {/*Вывод компонента динамически*/}\n                    {this.state.news.map((itemNews, index) => {\n                        return (\n                            <News\n                                key={index}\n                                title={itemNews.title}\n                                descriptions={itemNews.description}\n                                changeTitleNews={event => this.handleChangeTitleNews(event.target.value, index)} //Передаем метод в качестве props (так как input находиться в компненте News)\n                                onDelete={this.handleDeleteNews.bind(this,index)}\n                            />\n                        )\n                    })}\n                </div>\n            </div>\n        );\n    }\n\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}